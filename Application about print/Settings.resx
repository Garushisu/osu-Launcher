<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACkFgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAFmtJ
        REFUeNrtnXl0FVWexz95IQkhQBIICWYBCUqIBgihRRIRRG3RbhCnXdB25hyP+4IYXM7MsRUXUNu2+9gC
        rq19emZU6B42RRYJqJAgrSGyymoIskQSskAgLEle3vxBGiHkvVfLfa9uVd3v/fO9ql/d3+9bt+7yWyJw
        B8ZwE73oSSLdiSOWGKKIwtP2q5cWmjnFCRppoJ5aDrGAr1yiG1fgXXw629vuUIzHFb2Mpb/ua/rTWRHA
        KUgkQ/c1fUhQBHAKUknWfU0yqYoATkEm3XRf051MRQCnIJtI3ddEMlARwBmIJNvQdZe4QTtuIEA8Awxd
        N4DuigBOQCrphq7LcMM00A0EGECioesSDY4cigAm0ZPfki/wfkPoZOi6KAYLfIoC7qCnC143k0jhQf6J
        lw3C5uBRLNS9DfyvNt8gdc5HNptoYS0PkKKM7N/4j1CGt035i+kl5K6p7DBMgG30FvIMySxtu6OXMh5R
        JDgfPbifdbSeo/53iBVw51EcM0yAo4wU8ARdeO+cu7ZSyn30UEb/F+KYSAkt56m/mWcEzFEKDZvfh4/J
        puVHMrWDvrVQzG10UcaPZAyfctKP+o9xt+n7zzFFgI9NU/BevyPQST7hKgN7lA5CFm9SH9AAVYwzJeEC
        tpkiwFaTs4DxVAe8fx2zyHKn8ROYzA8aTFBOgQkp13LcFAEaudqE9CvYrUHGLiYR7y7jR3AVy8/M94O1
        9eQYlvSCKfP78DHVsOxBbNQoo4VljCbCLebvzUvU6DLCaoNHs3F8aZoAKw1O1fpTokvOIaa7YXkYwVi+
        NmCGpaQZkJank2gdGybXgOR0lhmQVcJ1zh4HkphOneFdOf1ePU+YNr8PH4W65aawwKCsOqaR5FTzD2Kl
        KUPM0bk32IUiIQT4XOeGVC/+bkreChNzHqlxI80mTTFbFwXygywxtb+Vl+sy/2yT8ppMLn2lRS/WmzbG
        HB0Tpd8LMb8PHy9rltmbf5iWVubcj8BLAoyxQKN7R7rJLaCz2/cap6AZfCJA2jSnmh8KOCxAQUWa9s4e
        aXe0ZKa18pAGiQNNznFOt3qhvhCSoStfCDHIuqBKSmGdMPP78PFt0DVIAWVCJK0gzrkEgCcFGaSCWwOu
        mB8X+P6fHgMKA0jzMJE9giRNcbL5YUiQwxHt7QjP+d1BH0SFUPP78FHud3GWwAscESSlSqgbmoTozGKB
        b+UiLutARqIJJ7DA08+EDqQNZ7HA0WYRMc4mADwq1CgHeLbdqiCedwQP/z8T7q12Y04GUzkgVMYkp5sf
        BlEl2DBbeIY8EoimGwUsCJH5ffjwMp8CuhJNAsN4li2C738w/HuA4T966MwCrhd+11oqqCGegQZjALSj
        nm00kERmCLz6lnAzJ8Nrjk6EGydZGQIC9Aybz32iKQeVwFgZbvNbExiymsMonI96VodfqBUE2M42Ze0O
        sJUd7iBAA2uUtTvAGo66gwBQTJOydzs0UWyFWGsIsIlKZfF22M8m9xCgks3K4u2wmZ/cQ4AmSpXF26GU
        ZvcQAMrULOAcnKLMGsFWEWAn1crqZ6Gane4iwEH2KKufhQqq3EWAY1ZsekiMHTS6iwAoAsihDesIUIFX
        2b0NLVS4jwCVnFCWb8MJ6zbGrCNAnVVfPQnRSL37CNDIcWX5Nhy37mWwjgDNaivoDJqs2QU0QoBBTBCU
        v09BPJKZoNerUJ9LWBJ/ZhRbWMJiNpoctmLcUZNHoy6iTd6hK0P4NTeQw1fcTm1oHjOC6Wf8Vw/zBU8y
        xIQRhxpOFeG8VsMQw3rsTC5P8eVZoSkvhsrVd+x5JqtmMY8yyBANbu8gfaJbWwu3GdBgLIOZzJLzYq1q
        +WUozN/bb26fKpbyJMN1lVfw8Fdl+LPa+7re2ngu5ymW+Q2zKxGfbioiaGx/PV/zGjdyoabv2WhhMYLO
        aFVcqUFr0VzIBF7j66C5T6ZpN6w2XMVcTZ73TVSymVLK2MlBjvl5+6/kz4ZybzkZ6ymkGF+Hv3WlN1kM
        4zJySCNKw91quFmbk7k2AiTwD53flSaq2cMOdlBBJXU00gzE0IMsrmOcWkp2gEMsYjk7qeMUEEUcPUgl
        kwFk0Y9eOlcKnzORI6IIMJnXDW8ZeTlBI8dpAjrTne7uTo8cVFtHOMpJIIZY4og1rC0vhcwSQ4AsFhuo
        vatgNXYxLrifUXB+RfI8Y5U2bYieRPC5n1nFGQQf2EfxW6VLm+JORgX7SzACxDHFHVW0HYlECoOlug5G
        gHFcp/RoY4zl12YI0INHnZ+zxtHozKOBU2YEJsAtjFA6tDkKuNkoAVK4X63ZbY9IHgiU5NIT8P3PU/pz
        APICjQGeAO//3e6pYuNoeLjH/xjgnwD/po5rHIOh3KSXAD25yxWl5d0yBtzlL6mdPyOP7TAJq4JdMdzf
        aa4/AlSoHB6OwmZ/0dj+lnn7+YpMLlaacwQWcz8b9REAaiiiO7lqJmBztPAej7HP38+BNnqOs5ImLjft
        s65gHY4xjRdo8P+HyCDsKeEn8p1dxMTBqOIJ3gwcdhZsq9fHerYzIuQ5uBXEo5wH+b9gDiFa9vp3so5h
        9FYatRXWcw9fBv+btsOefaxhEH2VVm2D1dzLei1/1HraV80qsrhIadYWWMJ97NL2V+3HvfV8RT+ylXal
        xzwe9r/sM04AOMqX9HFqZWvHYDaT9OQc1Ofw0cgqMhQFJMaHPEaNngv0evwcZ7UaBaTFHCbrTQ6h3+Xr
        OMVcxEClbemwgEn63n5jBIBG1jCYTKVxqVDEAxzUf5kxp88GviWfVKV1aVDKvcbSbxv1+q1lM9eomCFJ
        sJt7jRacMe72vZ9KxqqwEQlwhMkUGb3YjN//NqIZbWvP4Va8tILN+/AK7xq/3FzX4/mQcbZSl496DlDB
        Hg5QwzGagGi60ZM0LqQf6STYjA6L+A8tmUBCQwC4jIU2mQw2U85aitnIXo50eEYeRTx9yGUk+fTXlInH
        euznJquqDf0Lz9ogB9dBPuRmUjXSPYJUbuEjDtqgZ7+znoPpbJFaRT/yKkMMVEnvRC6vsVfqvm0iTYZh
        6BlpFVTLG1xiqm+XMoNaafv3tBzfoTxqJFROK8sZLcCn2cNVFNEqYQ8PMVQOAiRQKp1y6nhWoB9jD6ZK
        mNr6G+LlIEA0SyVTzdYQLE7Hs02yXi4WsVIREfYRIwsT27Ca2/lM+F0XcQclUvUzXpZ92AKphsclXBiy
        nvaTaqyrJV8OHi6QyvzpIe1tulQUmKcrRX9IkMg7Es2QV4Xw7f95FCiWpr9e3rT2RHYQCyUy/1YGh6XX
        uWyXaLG7wCoHvRSeoEKqhV/4jqVuDFqwIZxtN1MC5QELzZfwEdZJtTnSyrNh7H8Ez0nW+1IeDvHspw1d
        yOf3bJNuZ2x5mMNXe1AkmQZa2corjAiWG9g44sjjCYqkGvx+XhCNDvsncIyUZwT1LGcKQ7UH9Ac/II0k
        mUsZyWgGaaoaZAVmMIXWMMv08AaTJNVHLZtYTQnfU43XKAGi6MVF5DGCIfQlVtKuAuzlBrZaIPdSlpIh
        sV5O8CMb+Ibv2EWNvzQREee97/GkMoAhDCGbNFvkBvkD/2mR5D/yhA3008h+trOBTeygkoZzx4TTBIgl
        kVQyySabAaSTaMCBwipUMdZfBqyQYyjLwr0AM4EW6tnHLraynXIqOcwJiGAMt9OfDJLpZsvc4B9xFy0W
        ye7E/3CHDXXm5SjV7KOc2fCGhHNZ7a0pcDb8kONWmmytv9c9Ni/hWM5aS+V/TYWt9ZfkkXZppw1r+clS
        +ZUWE1AAAeycAM7nt9pu+J5ALicRvUjwWH+ibAL1ls3/f8YG6m2swe4eW2cBPcBey5/hRw7YWINdPVLv
        8QVDhZmoOEE4bCwuXxLEemwd4L0ncB7csKDZ1gSI8dgkCLJjyDH4VtpYg9EeG236no8a9RQm0clj49KQ
        rRyT4jmOhv0oWhwi7VwPpJUmKZ7jlI0JEKEKwrgcdiaAR5JiNjE21qLPY+Phy0M3KZ6jm40J4PVIsJI2
        DjkOspJsrMEWexNAigQpkjyFMTR5OGXjx79Qgm2sKFuX0jnl4YSNH7+fBJkJEuhnYw2e8NBo48dPp4/l
        z9DX1p+AY55AVSWlRwK5lj9Drq1TZjd4bO3OEMFIixO7ehhpY/1BvUdviRHJkM8FlspPlSNNi2HUejhk
        6w70p8BS+QU2r5xyKJKTnKSeFiKJtuGOViQtfGrZbmYnng5TVhKx8HKEvayniHmnv6CdSSCVTAZyCQPI
        INFGbiJVXM8Gi2TnsdRGoWHN1J0JDdtNJYc5SZs7yEkOcpDvAA/dSWUAg8klm3S6St+tFO60jAB32sL8
        x9jPNjawkV1U0nDueOl/Dt2JpLbw8Fz6hi7vhADs4wa+t0BuDkvDk5bFII6zhw38k/X8QI2/+MngiygP
        yVzCSEYzWNpjj5kUWpAgYgaPSKqPGjaymhK2Ui1OL13IpZDPJUya7KOWq8Ku5Kul1EQdyyhkSOhG7Fgu
        52W+ly5JVFHYk0StkEwDXrbwEsPDE+eRxkN8K1mitKlhNH8Ez0vVey/f8GC4azclU0i5VIPf+LD1fYJU
        udLKecyqIP8cFkj0JmwL09HQUHZINPLN41IsRAJv4ZVGHcVhOJvPpESioX+W9R4R8cyXaDgM9cq8D59L
        1Nu5cgT3y1UwYmkIR4FMqcxfywgZzA9dWSPVgqg4RHOBoRIN/qf7KWCjXsT5X5NkXkUjmcONgh1FIpjA
        HK6Qqp8Nsjj0ylg2rp7n6CGshz14XsIk2dKUjRsmZd7sVooYI6Rw5NWskLJwZI0shSPlLR9dy0yTq+Qc
        Zkm553+6SVA6GjIkLx69lz8y1FDx6Dz+xD6p+7ZZBpf0qVKr6HSr4mNuJU3jxNBDOrcxm2ob9OwZs+Yz
        O1cezoJwH0IYRDMVrKWEDfzI4Q4jIqNIoC+5jCSfTJukzjnATayzjgAJfMSvbKGon1HPAfawh0pqOMop
        IIZuJJFGX/qRZrswj8/4d6uS5Xl4QcrZsfbmpZlmic4yjPXhOTOvsZkUUbfxEp1t9r60H/88eCyOLTLf
        hzx+MF4yxzgBCniHFFurzimI4TK+ZX94CTCQ98lWupcECeSyyliQnzECZPAXi0OyFM5FKgP50siZjBEC
        9OZtrlc6lwyZZPKV/mwP+gnQi1n8RulbQgwkg1UcDy0BejGDiUrXkiKHDFbro4A+AqQwU5lfcgr0YbWe
        D4EeAqTzlsVF2hS0UOAiSjgqngD9eZdxSr82QDaXsFZr6h+tBBjE+4xRurUJLiKPUqrFEeAKPuAypVcb
        oS8FbGafGAKM5z0GKp3aDL0Zw252miVAJPcww9apEN2LRK6ljo34jBOgC//FNFsnQnQ34riWCEoDVVcP
        RIBk/kChrcvKKUQzihS+8b855J8A2bzDRFtXFFEA8DCMHMr81TbzR4AC/luyOBgF47iYK9nQsceAvze8
        L5covTkIOf6qGvgjwHJKldYchG8o0keAWv5m43JSCueilb9Rp48AsNCy/JsKovEdn/j7yT8Bqvhr4C0E
        Bdu8/x/4PxcItMybS5nSngNQxjz/PwYiQBXv4VX6szm8vBuoJkTgjZ55rFUatDnWMD/Qz4EJUMdMW9cV
        VDjJzMCuIcG2ej/jc6VFG2MZSwL/IRgBjvO6reuKuRt1vB7MRzj4YU8xHytN2hQfURLsL8E9gnyUc73A
        jFsK4cIuHgseL6jFJawWH2MNHwy30Eg91VRRw1FaiVFHzAHgpZ4qqqihgVP4iDSsLS/PaZm/aYuNj+fv
        jNUl/hTVVLCDHVRQST2NNAPR9CCL6xhvo1pb4UM1n7KcndTRBEQRRyKpZDKALPqRrNM1ZxkTtQSLak2O
        MJq5mioGNbGfzZRSxk6q/ESoRDCSN2TJcScNyihkjZ/N9zh6M4A8hjOINKI13O0QN1Ms8vEimB4kVUkd
        JbzKOPpoqjk4yhY5uMKZx0xLDeIo+jKeV1kTNHfhi+IZmuI3VfJBFvM4v6CbLkJ9oMx+VvuLrkQ13bmM
        J1jCQT93Kw7NJ/a683hXxSImkWMoU9BEWpTh21oLtxrQYGdymMRnVLW7Wy3XhuYrFcG0M0LqWcEUBpvw
        GR4qZYZha1oNQwzrMYbBPM5KDp+52wuhS3uVxAqaKGMa+cSZvFdf9ijTt7XdZJjUZhz5TOc7mlhOT0KI
        HMYJqh/am+3K9G1tm6B8a0mM15scW29C1C1sQUFW1LBI7yXW7cpFqZijM4jWtHQOCawjQFx4ipzaAl1M
        z6hsSIAe1nVaOsSFufKxFARIVSPAGcRal3LfOgJkmkpU7Sx0ItN9BBig7C6DNqwiQFeylNXPQpZVMyKr
        CNA7DGWe7YR+9HYXAbKsqngvKZKt+ghYRYBhmtwa3IMY8txEgGiVdfA8DLdmN9AaAqSSoyzeDoOs2Quw
        hgBDVObB85DGYPcQYKR1hx/SIlqTV6AjCBCv8o/5eS26u4MAA1W9sQ6RbcXmmBUEGKWSz3aIREaFX2j4
        SyTHck0I7lrDbmqIJzvkUYx1bKWBJPqHwPfuGt7kpNN5Plh4SMgmnmYo8UTRlXzmhbAWsJe5jKArUcQz
        lN+xWfD9D7pheTxZqMr28XS7JWV33gxRSetWZrWbpqXxDPuFypjkdPN3ZonA9/FThnUgI4EFISHAPOI7
        kPYLFgkccz5zuqdkrrAPwGGe7dAgADnsFm7+cr8O1/E8xxFBUqqs2Q4KH54SZo5bAsa/TBH8GfDyWABp
        EdxKhSBJjzvZ/F35UoiSvuXyIJKSKRVKgG+CHl/ns06IpJVOdpa9QshQuVzT2fnDAscALw9qkJhFkZBP
        W75zCfCyAAXN13iQlM5WYQTYovGkLl3I9HO6U82fzHrTyvlYR+T7K8II8JJmmSnMMS3tO0HRl9JhAs0m
        VfO/unbfRlAvxPx1DNchtRezTcprYrwzCZBj8hv5sc7N1y4sF0KAZTpDWHqZHAWW643wtQ968qLhtBBz
        DbiRThFCgEIDH7v5BmXV8kJo4/utRgS/9JtrKFBbbMhhaig1ps1/yFD2jjSWGpBVzLWhy+4hD1KYxiFd
        illlMIogji9ME2AFXQzJzmS1LjnVvOim7ImjWKY5SdR3Jr6Jz5smwFTDsnM0r3paWMqV7jH+acQziZ0a
        lPMDI0xIuZbjpszfyNUmpBdQrkHGTh62whlMBgxgZpCUhwf5lSkJF7DNFAG+NxmyNe68JG7tJ30zuNid
        xj8ND1exkBN+1HOUu0zeP9Lkqvwj005zd3PMz71PsIBRKnU2dOFWVncwI2jmaQHqKTRFgEcFUPyZDjbA
        WljFLQanl45EIvdS2s6x4m0hOURG+X0Dg7ejQnz1Y3m33dHSt9xjXVIYeZHMQ6w7Q4LPBO2IX2AiH+E2
        QUHbvc74QXkp5UEVGR2IBPfzNS2sF+YjH8VCEyePorymB7KBFtZwn6qUEBw9mBjU4UMPjO8FTBX4FCOY
        qArvWIPfGDyFbGKC85XjhkXIDoOF7+rYpQjgBFSyz9B1+6hUBHACGgy+ybu0FF1SBJAfXrYaum4rrYoA
        zsB2vAZos90NqnEHAco5qvuaBnYrAjgFlVTrvqbaDVNAtxDgsIF1wF4OKwI4BSco131NufNTNYAVGUKs
        wWyOk0QSCXSnK7HEEE0nPHgAH15aaOIUJzhGA/XUcohP3KGY/weRDhvnsd8BPwAAAABJRU5ErkJggg==
</value>
  </data>
</root>